name: Deploy Strapi

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Run Linter
        run: npm run lint

  deploy:
    needs: lint
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ vars.HOST }}
          username: ${{ vars.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # Strapi-specific deployment
            APP_NAME="serviceatlas-strapi"
            
            # Create application directory in /opt/
            APP_DIR="/opt/$APP_NAME"
            mkdir -p $APP_DIR
            
            cd $APP_DIR
            
            # Create production environment file
            echo "Creating .env for production"
            cat > .env << EOF
            NODE_ENV=production
            APP_PORT=${{ vars.APP_PORT }}
            
            # Server
            HOST=0.0.0.0
            PORT=1337
            SERVER_URL=${{ vars.SERVER_URL }}
            PUBLIC_URL=${{ vars.PUBLIC_URL }}
            ADMIN_URL=${{ vars.ADMIN_URL }}
            
            # Database
            DATABASE_CLIENT=${{ vars.DATABASE_CLIENT }}
            DATABASE_HOST=${{ vars.DATABASE_HOST }}
            DATABASE_PORT=${{ vars.DATABASE_PORT }}
            DATABASE_NAME=${{ vars.DATABASE_NAME }}
            DATABASE_USERNAME=${{ vars.DATABASE_USERNAME }}
            DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
            DATABASE_SSL=false
            
            # Secrets
            APP_KEYS=${{ secrets.APP_KEYS }}
            API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }}
            ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }}
            TRANSFER_TOKEN_SALT=${{ secrets.TRANSFER_TOKEN_SALT }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            EOF
            
            echo "Created .env file"
            
            # Clone the repository on the server
            rm -rf temp-deploy
            git clone --depth 1 https://github.com/${{ github.repository }}.git temp-deploy
            cp -r temp-deploy/* ./
            cp -r temp-deploy/.* ./ 2>/dev/null || true
            rm -rf temp-deploy
            
            # Deploy using docker-compose with production profile
            docker-compose down || true
            docker-compose --profile prod up -d --build
            
            # Clean up
            docker image prune -f
            
            # Verify deployment
            echo "Waiting for application to start..."
            sleep 30
            if curl -f http://localhost:${{ vars.APP_PORT }}/admin > /dev/null 2>&1; then
              echo "✅ Strapi deployed successfully on port ${{ vars.APP_PORT }}!"
              echo "🌐 Application is available at: http://${{ vars.HOST }}:${{ vars.APP_PORT }}"
            else
              echo "❌ Deployment verification failed!"
              echo "📋 Container logs:"
              docker-compose --profile prod logs || true
              exit 1
            fi
