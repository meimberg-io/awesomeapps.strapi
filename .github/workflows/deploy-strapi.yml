name: Deploy Strapi

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Dependencies
        run: |
          npm install

      - name: Create .env file
        run: |
          echo "HOST=${{ vars.HOST }}" >> .env
          echo "PORT=${{ vars.PORT }}" >> .env
          echo "SERVER_URL=${{ vars.SERVER_URL }}" >> .env
          echo "ADMIN_URL=${{ vars.ADMIN_URL }}" >> .env
          echo "PUBLIC_URL=${{ vars.PUBLIC_URL }}" >> .env
          echo "APP_KEYS=${{ secrets.APP_KEYS }}" >> .env
          echo "API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }}" >> .env
          echo "ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }}" >> .env
          echo "TRANSFER_TOKEN_SALT=${{ secrets.TRANSFER_TOKEN_SALT }}" >> .env
          echo "DATABASE_CLIENT=${{ vars.DATABASE_CLIENT }}" >> .env
          echo "DATABASE_HOST=${{ vars.DATABASE_HOST }}" >> .env
          echo "DATABASE_PORT=${{ vars.DATABASE_PORT }}" >> .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> .env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
          echo "DATABASE_FILENAME=" >> .env
          echo "DATABASE_SSL=${{ vars.DATABASE_SSL }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

      - name: Build Strapi
        run: |
          npm run build

      - name: Deploy to Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_HOSTNAME: ${{ secrets.SERVER_HOSTNAME }}
          SERVER_ROOTDIR: ${{ vars.SERVER_ROOTDIR }}
        run: |
          
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/ssh_key
          chmod 600 ~/.ssh/ssh_key
          ssh-keyscan -H "$SERVER_HOSTNAME" >> ~/.ssh/known_hosts
          
          echo "Starting rsync"
           
          rsync -avz --delete \
            --exclude=node_modules \
            --exclude=.ssh \
            --exclude=.git \
            --exclude=.github \
            --exclude=.env* \
            --exclude=.cache \
            --exclude=.tmp \
            --exclude=logs \
            --exclude=database \
            --exclude=data \
            --exclude=src \
            --exclude=public/uploads \
            -e "ssh -i ~/.ssh/ssh_key" ./ \
            "$SERVER_USER"@"$SERVER_HOSTNAME":"$SERVER_ROOTDIR"
          
          ssh -i ~/.ssh/ssh_key "$SERVER_USER"@"$SERVER_HOSTNAME" "cd \"$SERVER_ROOTDIR\" && pm2 restart strapi"
          echo "Wutz!"
